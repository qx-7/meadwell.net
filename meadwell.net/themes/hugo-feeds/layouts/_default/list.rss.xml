{{- /*
  - Official current version of RSS spec: https://www.rssboard.org/rss-specification
  - W3C Validator version: https://validator.w3.org/feed/docs/rss2.html
*/ -}}
{{- /*
  - All dates/times are in UTC for uniformity.
  - The consumer app/software can do the conversion as needed.
*/ -}}
{{- $rfc822 := "Mon, 02 Jan 2006 15:04:05 -0700" -}}
{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
{{- $pages = $pctx.RegularPages -}}
{{- else -}}
{{- $pages = $pctx.Pages -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}
{{- $datapersons := .Site.Data.persons -}}
{{- $semwebpersons := .Site.Params.semweb.persons -}}
{{- printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{ . }} on {{ end }}{{ .Site.Title }}{{ end }}</title>
    <link>{{ .Permalink }}</link>
    {{- with .OutputFormats.Get "RSS" }}
      <atom:link rel="self" type="{{ .MediaType.Type | html }}" hreflang="{{ or ($.Site.Language.LanguageCode) ($.Site.Language.Lang) }}" href="{{ .Permalink | safeURL }}" />
    {{- end }}
    {{- if .IsTranslated -}}
      {{ range .Translations }}
        <atom:link rel="alternate" type="application/rss+xml" hreflang="{{ or (.Site.Language.LanguageCode) (.Site.Language.Lang) }}" href="{{ .Permalink }}index.xml" />
      {{- end -}}
      {{ range first 1 .AllTranslations }}
        <atom:link rel="alternate" type="application/rss+xml" hreflang="x-default" href="{{ .Permalink }}index.xml" />
      {{- end -}}
    {{ end }}
    {{- range .AlternativeOutputFormats }}
      <atom:link rel="alternate" type="{{ .MediaType.Type | html }}" hreflang="{{ or ($.Site.Language.LanguageCode) ($.Site.Language.Lang) }}" href="{{ .Permalink | safeURL }}" />
    {{- end }}
    {{- range .Site.Params.websubhubs }}
      <atom:link rel="hub" href="{{ . }}" />
    {{- end -}}
    <description>Recent content {{ if ne  .Title  .Site.Title }}{{ with .Title }}in {{ . }} {{ end }}{{ end }}on {{ .Site.Title }}</description>
    {{ with or (.Site.Language.LanguageCode) (.Site.Language.Lang) }}<language>{{ . }}</language>{{ end }}
    {{ with .Site.Copyright }}<copyright>{{ . }}</copyright>{{ end }}
    {{ if $semwebpersons }}{{ range $i, $semwebperson := index $semwebpersons }}{{ $dataperson := index $datapersons $semwebperson.person }}
      {{- /* note: else if [[semweb.persons]] is set in config file, use it to display a list of persons with fallback to /data/persons/ if present */}}
      {{ with or ($semwebperson.email) ($dataperson.email) }}<managingEditor>{{ . }}{{ with or ($semwebperson.name) ($dataperson.name) }} ({{ . }}){{ end }}</managingEditor>{{ end }}
      {{ end }}
    {{ else if .Param "author" }}
      {{- /* note: else if default Hugo 'author' param is used in frontmatter or config, display generic */}}
      {{ with or (.Param "author.email") }}<managingEditor>{{ . }}{{ with .Param "author.name" }} ({{ . }}){{ end }}</managingEditor>{{ end }}
    {{ end }}
    {{ if $semwebpersons }}{{ range $i, $semwebperson := index $semwebpersons }}{{ $dataperson := index $datapersons $semwebperson.person }}
      {{- /* note: else if [[semweb.persons]] is set in config file, use it to display a list of persons with fallback to /data/persons/ if present */}}
      {{ with or ($semwebperson.email) ($dataperson.email) }}<webMaster>{{ . }}{{ with or ($semwebperson.name) ($dataperson.name) }} ({{ . }}){{ end }}</webMaster>{{ end }}
      {{ end }}
    {{ else if .Param "author" }}
      {{- /* note: else if default Hugo 'author' param is used in frontmatter or config, display generic */}}
      {{ with or (.Param "author.email") }}<webMaster>{{ . }}{{ with .Param "author.name" }} ({{ . }}){{ end }}</webMaster>{{ end }}
    {{ end }}
    {{ with or .PublishDate .Date .Lastmod }}<pubDate>{{ .UTC.Format $rfc822 | safeHTML }}</pubDate>{{ end }}
    {{ with or .Lastmod .PublishDate .Date }}<lastBuildDate>{{ .UTC.Format $rfc822 | safeHTML }}</lastBuildDate>{{ end }}
    {{- /* <category domain="">CATEGORY_NAME</category> */ -}}
    <generator>Hugo {{ hugo.Version }}</generator>
    <docs>https://www.rssboard.org/rss-specification</docs>
    {{- /* <cloud domain="rpc.sys.com" port="80" path="/RPC2" registerProcedure="myCloud.rssPleaseNotify" protocol="xml-rpc" /> */ -}}
    <ttl>60</ttl>
    {{- /* <image url="" title="" link=""></image> */ -}}
    {{- /* <rating></rating> */ -}}
    {{- with .OutputFormats.Get "RSS" -}}
    {{- end -}}
    {{- /*
      NOTE: sort by last modified date to keep updated content on top
            last modified date should only be updated for 'meaningful' changes

      see: https://developers.google.com/search/blog/2014/10/best-practices-for-xml-sitemaps-rssatom
    */ -}}
    {{ range $pages.ByLastmod.Reverse }}
      {{- $frontmatterpersons := .Param "authors" -}}
    <item>
      {{ printf "%s%s%s%s%s" "<title>" "<![CDATA[" .Title "]]>" "</title>" | htmlUnescape | safeHTML }}
      <link>{{ .Permalink }}</link>
      <description>{{ printf "<![CDATA[" | htmlUnescape | safeHTML }}
        {{- with .Params.images -}}
          <img src="{{ index . 0 | absURL }}" />
        {{- else -}}
          {{- $images := $.Resources.ByType "image" -}}
          {{- $featured := $images.GetMatch "*feature*" -}}
          {{- if not $featured }}{{ $featured = $images.GetMatch "{*cover*,*thumbnail*}" }}{{ end -}}
          {{- with $featured -}}
            <img src="{{ $featured.Permalink }}" />
          {{- else -}}
            {{- with $.Site.Params.images -}}
              <img src="{{ index . 0 | absURL }}" />
            {{- end -}}
          {{- end -}}
        {{- end -}}
        {{- if eq $.Site.Params.rssfull "true" -}}
          {{- .Content | replaceRE "(?m)(?s:<(style|script)[^>]*>[^<]*<\\/(style|script)>)" "" | htmlUnescape | safeHTML -}}
        {{- else -}}
          {{- .Summary | replaceRE "(?m)(?s:<(style|script)[^>]*>[^<]*<\\/(style|script)>)" "" | htmlUnescape | safeHTML -}}
        {{- end -}}
      {{ printf "]]>" | htmlUnescape | safeHTML }}</description>
      {{ if $frontmatterpersons }}{{ range $i, $frontmatterperson := index $frontmatterpersons }}{{ $dataperson := index $datapersons $frontmatterperson.person }}
        {{- /* note: if [[authors]] is set in frontmatter, use this to display a list of persons with fallback to /data/persons/ if present */}}
        {{ with or ($frontmatterperson.email) ($dataperson.email) }}<author>{{ . }}{{ with or ($frontmatterperson.name) ($dataperson.name) }} ({{ . }}){{ end }}</author>{{ end }}
        {{ end }}
      {{ else if $semwebpersons }}{{ range $i, $semwebperson := index $semwebpersons }}{{ $dataperson := index $datapersons $semwebperson.person }}
        {{- /* note: else if [[semweb.persons]] is set in config file, use it to display a list of persons with fallback to /data/persons/ if present */}}
        {{ with or ($semwebperson.email) ($dataperson.email) }}<author>{{ . }}{{ with or ($semwebperson.name) ($dataperson.name) }} ({{ . }}){{ end }}</author>{{ end }}
        {{ end }}
      {{ else if .Param "author" }}
        {{- /* note: else if default Hugo 'author' param is used in frontmatter or config, display generic */}}
        {{ with or (.Param "author.email") }}<author>{{ . }}{{ with .Param "author.name" }} ({{ . }}){{ end }}</author>{{ end }}
      {{ end }}
      {{- with (.GetTerms "categories") }}{{ range . -}}
        <category domain="{{ .Permalink }}">{{ .LinkTitle }}</category>
      {{ end }}{{ end -}}
      {{ with (.GetTerms "tags") }}{{ range . -}}
        <category domain="{{ .Permalink }}">{{ .LinkTitle }}</category>
      {{ end }}{{ end }}
      {{- /* <enclosure url="https://example.com/example.mp3" length="IN_BYTES" type="audio/mpeg" /> */}}
      <guid>{{ .Permalink }}</guid>
      {{- /*
        NOTE: according to Google, pubDate should contain last modified date
        see: https://developers.google.com/search/blog/2014/10/best-practices-for-xml-sitemaps-rssatom
      */ -}}
      {{ with or .Lastmod .PublishDate .Date }}<pubDate>{{ .UTC.Format $rfc822 | safeHTML }}</pubDate>{{ end }}
      <source url="{{ .Permalink }}">{{ if eq  .Title  .Site.Title }}{{ .Site.Title }}{{ else }}{{ with .Title }}{{ . }} on {{ end }}{{ .Site.Title }}{{ end }}</source>
    </item>
    {{ end }}
  </channel>
</rss>
