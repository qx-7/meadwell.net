{{- /*
  - Official current version of Atom spec: https://datatracker.ietf.org/doc/html/rfc5023
  - W3C Validator version: https://validator.w3.org/feed/docs/atom.html
*/ -}}
{{- /*
  - All dates/times are in UTC for uniformity.
  - The consumer app/software can do the conversion as needed.
*/ -}}
{{- $iso8601 := "2006-01-02T15:04:05Z07:00" -}}
{{- $pctx := . -}}
{{- if .IsHome -}}{{ $pctx = .Site }}{{- end -}}
{{- $pages := slice -}}
{{- if or $.IsHome $.IsSection -}}
{{- $pages = $pctx.RegularPages -}}
{{- else -}}
{{- $pages = $pctx.Pages -}}
{{- end -}}
{{- $limit := .Site.Config.Services.RSS.Limit -}}
{{- if ge $limit 1 -}}
{{- $pages = $pages | first $limit -}}
{{- end -}}
{{- $datapersons := .Site.Data.persons -}}
{{- $semwebpersons := .Site.Params.semweb.persons -}}
{{ printf "<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>" | safeHTML }}
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="{{ or (.Site.Language.LanguageCode) (.Site.Language.Lang) }}">
  <title>{{ .Site.Title }}</title>
  {{- with .Site.Params.brand.tagline }}<subtitle>{{ . }}</subtitle>{{- end }}
  {{- with .OutputFormats.Get "Atom" }}
    <link rel="self" type="{{ .MediaType.Type | html }}" hreflang="{{ or ($.Site.Language.LanguageCode) ($.Site.Language.Lang) }}" href="{{ .Permalink | safeURL }}" />
  {{- end }}
  {{- if .IsTranslated -}}
    {{ range .Translations }}
      <link rel="alternate" type="application/atom+xml" hreflang="{{ or (.Site.Language.LanguageCode) (.Site.Language.Lang) }}" href="{{ .Permalink }}feed.xml" />
    {{- end -}}
    {{ range first 1 .AllTranslations }}
      <link rel="alternate" type="application/atom+xml" hreflang="x-default" href="{{ .Permalink }}feed.xml" />
    {{- end -}}
  {{ end }}
  {{- range .AlternativeOutputFormats }}
    <link rel="alternate" type="{{ .MediaType.Type | html }}" hreflang="{{ or ($.Site.Language.LanguageCode) ($.Site.Language.Lang) }}" href="{{ .Permalink | safeURL }}" />
  {{- end }}
  {{- range .Site.Params.websubhubs }}
    <link rel="hub" href="{{ . }}" />
  {{- end -}}
  <id>{{ site.BaseURL | relLangURL }}</id>
  {{ with or .Lastmod .PublishDate .Date }}<updated>{{ .UTC.Format $iso8601 | safeHTML }}</updated>{{ end }}
  {{ if $semwebpersons }}{{ range $i, $semwebperson := index $semwebpersons }}{{ $dataperson := index $datapersons $semwebperson.person }}<author>
    {{- /* note: else if [[semweb.persons]] is set in config file, use it to display a list of persons with fallback to /data/persons/ if present */}}
    <name>{{ or ($semwebperson.name) ($dataperson.name) }}</name>
    {{ with or ($semwebperson.email) ($dataperson.email) }}<email>{{ . }}</email>{{ end }}
    {{ with or ($semwebperson.url) ($dataperson.url) }}<uri>{{ . }}</uri>{{ end }}
    </author>{{ end }}
  {{ else if .Param "author" }}<author>
    {{- /* note: else if default Hugo 'author' param is used in frontmatter or config, display generic */}}
    <name>{{ .Param "author.name" }}</name>
    {{ with (.Param "author.email") }}<email>{{ . }}</email>{{ end }}
    {{ with (.Param "author.uri") }}<uri>{{ . }}</uri>{{ end }}
  </author>{{ end }}
  {{- /* <category term="" /> */ -}}
  {{- /*
    <contributor>
      <name></name>
    </contributor>
  */ -}}
  <generator>Hugo {{ hugo.Version }}</generator>
  {{- with .Site.Params.brand.icon }}<icon>{{ . | absURL }}</icon>{{- end }}
  {{- with .Site.Params.brand.logo }}<logo>{{ . | absURL }}</logo>{{- end }}
  {{- with .Site.Copyright }}<rights>{{ . }}</rights>{{- end }}
  {{- /*
    NOTE: sort by last modified date to keep updated content on top
          last modified date should only be updated for 'meaningful' changes

    see: https://developers.google.com/search/blog/2014/10/best-practices-for-xml-sitemaps-rssatom
  */ -}}
  {{- range $pages.ByLastmod.Reverse }}
    {{- $frontmatterpersons := .Params.authors }}
  <entry>
    {{ printf "%s%s%s%s%s" "<title>" "<![CDATA[" .Title "]]>" "</title>" | htmlUnescape | safeHTML }}
    {{- range .AlternativeOutputFormats }}
      <link rel="alternate" type="{{ .MediaType.Type | html }}" hreflang="{{ or ($.Site.Language.LanguageCode) ($.Site.Language.Lang) }}" href="{{ .Permalink | safeURL }}" />
    {{- end }}
    <id>{{ .Permalink }}</id>
    {{ with or .Lastmod .PublishDate .Date }}<updated>{{ .UTC.Format $iso8601 | safeHTML }}</updated>{{ end }}
    <summary type="html">{{ printf "<![CDATA[" | htmlUnescape | safeHTML }}{{- .Summary | replaceRE "(?m)(?s:<(style|script)[^>]*>[^<]*<\\/(style|script)>)" "" | htmlUnescape | safeHTML -}}{{ printf "]]>" | htmlUnescape | safeHTML }}</summary>
    {{- /* used if .Content is empty
      <content src="{{ .Permalink }}" />
    */ -}}
    <content type="html">{{ printf "<![CDATA[" | htmlUnescape | safeHTML }}
      {{- with .Params.images -}}
        <img src="{{ index . 0 | absURL }}" />
      {{- else -}}
        {{- $images := $.Resources.ByType "image" -}}
        {{- $featured := $images.GetMatch "*feature*" -}}
        {{- if not $featured }}{{ $featured = $images.GetMatch "{*cover*,*thumbnail*}" }}{{ end -}}
        {{- with $featured -}}
          <img src="{{ $featured.Permalink }}" />
        {{- else -}}
          {{- with $.Site.Params.images -}}
            <img src="{{ index . 0 | absURL }}" />
          {{- end -}}
        {{- end -}}
      {{- end -}}
      {{- .Content | replaceRE "(?m)(?s:<(style|script)[^>]*>[^<]*<\\/(style|script)>)" "" | htmlUnescape | safeHTML -}}
    {{ printf "]]>" | htmlUnescape | safeHTML }}</content>
    {{ if $frontmatterpersons }}{{ range $i, $frontmatterperson := index $frontmatterpersons }}{{ $dataperson := index $datapersons $frontmatterperson.person }}<author>
      {{- /* note: if [[authors]] is set in frontmatter, use this to display a list of persons with fallback to /data/persons/ if present */}}
      <name>{{ or ($frontmatterperson.name) ($dataperson.name) }}</name>
      {{ with or ($frontmatterperson.email) ($dataperson.email) }}<email>{{ . }}</email>{{ end }}
      {{ with or ($frontmatterperson.url) ($dataperson.url) }}<uri>{{ . }}</uri>{{ end }}
      </author>{{ end }}
    {{ else if $semwebpersons }}{{ range $i, $semwebperson := index $semwebpersons }}{{ $dataperson := index $datapersons $semwebperson.person }}<author>
      {{- /* note: else if [[semweb.persons]] is set in config file, use it to display a list of persons with fallback to /data/persons/ if present */}}
      <name>{{ or ($semwebperson.name) ($dataperson.name) }}</name>
      {{ with or ($semwebperson.email) ($dataperson.email) }}<email>{{ . }}</email>{{ end }}
      {{ with or ($semwebperson.url) ($dataperson.url) }}<uri>{{ . }}</uri>{{ end }}
      </author>{{ end }}
    {{ else if .Param "author" }}<author>
      {{- /* note: else if default Hugo 'author' param is used in frontmatter or config, display generic */}}
      <name>{{ .Param "author.name" }}</name>
      {{ with (.Param "author.email") }}<email>{{ . }}</email>{{ end }}
      {{ with (.Param "author.uri") }}<uri>{{ . }}</uri>{{ end }}
    </author>{{ end }}
    {{- with (.GetTerms "categories") }}{{ range . -}}
      <category term="{{ .LinkTitle | lower }}" label="{{ .LinkTitle }}" scheme="{{ .Permalink }}" />
    {{ end }}{{ end -}}
    {{ with (.GetTerms "tags") }}{{ range . -}}
      <category term="{{ .LinkTitle | lower }}" label="{{ .LinkTitle }}" scheme="{{ .Permalink }}" />
    {{ end }}{{ end }}
    {{- /*
      <contributor>
        <name></name>
      </contributor>
    */ -}}
    {{ with or .PublishDate .Date .Lastmod }}<published>{{ .UTC.Format $iso8601 | safeHTML }}</published>{{ end }}
    {{- with .Site.Copyright }}<rights>{{ . }}</rights>{{- end }}
    {{- /* Only used if this entry is a copy. See: https://validator.w3.org/feed/docs/atom.html
      <source>
        <id></id>
        <title></title>
        <updated></updated>
      </source>
    */ -}}
  </entry>
  {{- end }}
</feed>
